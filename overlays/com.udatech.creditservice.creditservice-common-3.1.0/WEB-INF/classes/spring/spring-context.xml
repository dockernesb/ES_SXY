<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">
		
    <bean id="propertyConfigurer" class="com.wa.framework.common.PropertyConfigurer">       
    	<property name="locations">
			<list> 
				<value>classpath:properties/*.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 信用库（业务库） -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.system.driver}"/>
        <property name="url" value="${jdbc.system.url}"/>
        <property name="username" value="${jdbc.system.username}"/>
        <property name="password" value="${jdbc.system.password}"/>
        <property name="initialSize" value="${druid.initialSize}" />
        <property name="maxActive" value="${druid.maxActive}"/>
    	<property name="minIdle" value="${druid.minIdle}" />
    	<property name="maxWait" value="${druid.maxWait}"/>
    	
    	<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}"/>
    	<property name="maxOpenPreparedStatements" value="${druid.maxOpenPreparedStatements}"/>
    	<property name="validationQuery" value="${druid.validationQuery}"/>
    	<property name="testOnBorrow" value="${druid.testOnBorrow}"/>
    	<property name="testOnReturn" value="${druid.testOnReturn}"/>
    	<property name="testWhileIdle" value="${druid.testWhileIdle}"/>
    	<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}"/>
	</bean>

	<!-- 原始库 -->
	<bean id="dataSource1" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.system.driver}" />
		<property name="url" value="${jdbc.system.url1}" />
		<property name="username" value="${jdbc.system.username1}" />
		<property name="password" value="${jdbc.system.password1}" />
		<property name="initialSize" value="${druid.initialSize}" />
		<property name="maxActive" value="${druid.maxActive}" />
		<property name="minIdle" value="${druid.minIdle}" />
		<property name="maxWait" value="${druid.maxWait}" />
		<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements" value="${druid.maxOpenPreparedStatements}" />
		<property name="validationQuery" value="${druid.validationQuery}" />
		<property name="testOnBorrow" value="${druid.testOnBorrow}" />
		<property name="testOnReturn" value="${druid.testOnReturn}" />
		<property name="testWhileIdle" value="${druid.testWhileIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
	</bean>

	<!-- 有效库 -->
	<bean id="dataSource2" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.system.driver}" />
		<property name="url" value="${jdbc.system.url2}" />
		<property name="username" value="${jdbc.system.username2}" />
		<property name="password" value="${jdbc.system.password2}" />
		<property name="initialSize" value="${druid.initialSize}" />
		<property name="maxActive" value="${druid.maxActive}" />
		<property name="minIdle" value="${druid.minIdle}" />
		<property name="maxWait" value="${druid.maxWait}" />
		<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements" value="${druid.maxOpenPreparedStatements}" />
		<property name="validationQuery" value="${druid.validationQuery}" />
		<property name="testOnBorrow" value="${druid.testOnBorrow}" />
		<property name="testOnReturn" value="${druid.testOnReturn}" />
		<property name="testWhileIdle" value="${druid.testWhileIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
	</bean>
	
	<!-- cetl记录库-->
	<bean id="cetlDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.system.driver}"/>
        <property name="url" value="${cetl.jdbc.system.url}"/>
        <property name="username" value="${cetl.jdbc.system.username}"/>
        <property name="password" value="${cetl.jdbc.system.password}"/>
        <property name="initialSize" value="${druid.initialSize}" />
		<property name="maxActive" value="${druid.maxActive}" />
		<property name="minIdle" value="${druid.minIdle}" />
		<property name="maxWait" value="${druid.maxWait}" />
		<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements" value="${druid.maxOpenPreparedStatements}" />
		<property name="validationQuery" value="${druid.validationQuery}" />
		<property name="testOnBorrow" value="${druid.testOnBorrow}" />
		<property name="testOnReturn" value="${druid.testOnReturn}" />
		<property name="testWhileIdle" value="${druid.testWhileIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
	</bean>
	
	<!-- 原始库 -->
    <bean id="jdbcTemp1" class="org.springframework.jdbc.core.JdbcTemplate">
       <property name="dataSource" ref="dataSource1" />
    </bean>
    
    <!-- 有效库 -->
    <bean id="jdbcTemp2" class="org.springframework.jdbc.core.JdbcTemplate">
       <property name="dataSource" ref="dataSource2" />
    </bean>
    
    <!-- cetl库 -->
    <bean id="jdbcTempCetl" class="org.springframework.jdbc.core.JdbcTemplate">
       <property name="dataSource" ref="cetlDataSource" />
    </bean>
	
	<alias name="sessionFactory" alias="baseSessionFactory"/>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="entityInterceptor">
		    <!-- 默认设置所有表的createBy和createDate -->
			<bean class="com.wa.framework.common.AuditInterceptor"/>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.system.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.system.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.system.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.system.format_sql}</prop>
				<prop key="javax.persistence.validation.mode">none</prop> 
			</props>
		</property>
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/wa/**/model/</value>
				<value>classpath:com/udatech/**/model/</value>
			</list>
		</property>
		<property name="packagesToScan">
            <list>
                <value>com.wa.framework.*.model</value>
                <value>com.udatech.gov.*.model</value>
            </list>
        </property>
	</bean>
	
	<!-- 信用库（业务库） -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource"/>
	</bean>
	
	<!-- 原始库 -->
	<bean id="jdbcTemplate1" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource1"/>
	</bean>
	
	<!-- 有效库 -->
	<bean id="jdbcTemplate2" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource2"/>
	</bean>
	
	<!-- cetl库 -->
	<bean id="jdbcTemplateCetl" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="cetlDataSource"/>
	</bean>
	
	<bean id="wajdbcTempleate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

	<aop:config expose-proxy="true">
		<aop:pointcut id="txPointcut"      
			expression="execution(* com.wa.framework..*.*Service*.*(..)) || execution(* com.udatech.*..*.*Service*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config> 
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<context:component-scan base-package="com.wa" use-default-filters="false">
		<context:include-filter type="regex" expression="com.wa.framework.dao.*"/>
		<context:include-filter type="regex" expression="com.wa.framework.service.*"/>
		<context:include-filter type="regex" expression="com.wa.framework.*.dao.*"/>
		<context:include-filter type="regex" expression="com.wa.framework.*.service.*"/>
		<context:include-filter type="regex" expression="com.wa.framework.dictionary.service.*"/>
	</context:component-scan>
	
	<context:component-scan base-package="**.**.dao" />
	<context:component-scan base-package="**.**.service" />
	
</beans>
